<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>message[0] = "Hello World!";
message[1] = "Goodbye World!";

message_current = 0;
timer = 0;
cutoff = 0;
portrait = "";

t = 0;
increment = 1;

done = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_font(f_chat);
draw_set_colour(c_white);

//How many messages are in the array
message_end = array_length_1d(message);

if(message_end &gt; 0)
{
    //Variables
    var charWidth = 7;
    var lineEnd = 35;
    var line = 0;
    var space = 0;
    var i = 1;
    var delay = 3;
    
    //Text Posisiton
    tY = view_hview[0]-55;
    if(portrait == "none") var tX = 5;
    else var tX = 60;
    
    //Next Message
    if (keyboard_check_pressed(ord('S')))
    {
        //If we still have some more messages, go to next one
        if(message_current &lt; message_end-1)
        {
            message_current++;
            cutoff = 0;
        }
        //If we dont, we're done
        else
        {
            done = true;
            instance_destroy();
        }
    }
    
    //Typewirter
    if (cutoff &lt; string_length(message[message_current]))
    {
        if (timer &gt;= delay)
        {
            cutoff++;
            timer = 0;
        }
        else timer++;
    }
    
    //Draw Text
    while(i &lt;= string_length(message[message_current]) &amp;&amp; i &lt;= cutoff)
    {
        //go to next line
        var length = 0;
        while(string_char_at(message[message_current], i) != " " &amp;&amp; i &lt;= string_length(message[message_current]))
        {
            i++;
            length++;
        }
        
        if(space+length &gt; lineEnd)
        {
            space = 0;
            line++;
        }
        i -= length;
        
        draw_text(tX+(space*charWidth),tY+(13*line), string_char_at(message[message_current], i));
        
        space++;
        i++;
    }
    
    //Draw Portrait
    switch(portrait)
    {
        case "none":
        {
            break;
        }
        case "diest":
        {
            draw_sprite(spr_portrait, 0, 5, view_hview[0]-55);
            break;
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
