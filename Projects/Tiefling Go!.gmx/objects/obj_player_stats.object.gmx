<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Initialize the Player stats
hp = 4;
maxhp = hp;
stamina = 1;
maxstamina = stamina;
expr = 0;
maxexpr = 3;
level = 1;
experience = 0;
attack = 1;
inv_slots = 9;
draw_set_colour(c_white);

// Get the player's xstart and ystart
if(instance_exists(obj_player))
{
    player_xstart = obj_player.x;
    player_ystart = obj_player.y;
} else {
    player_xstart = 0;
    player_ystart = 0;
}

//Save the previous room
previous_room = room;

room_start_action = NEW_ROOM;


</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Create the items and inventory
player_inventory_width = 5;
player_inventory = ds_grid_create(player_inventory_width, 1);

scr_add_item(player_inventory, "Katana", 1, "A Japanese Sword!", spr_katana, "");
scr_add_item(player_inventory, "Axe", 1, "A metal axe", spr_ax, "");
scr_add_item(player_inventory, "Cimitarra", 1, "A normal Cimitarra", spr_cimitarra, "");
scr_add_item(player_inventory, "Life Potion", 25, "A normal Potion", spr_hp_potion, "");
scr_add_item(player_inventory, "Magic Potion", 15, "A normal Potion", spr_mp_potion, "");
scr_add_item(player_inventory, "Arrow", 50, "A normal arrow", spr_lance, "");
scr_add_item(player_inventory, "Star Necktale", 1, "A normal Necktale", spr_star_necktale, "");
scr_add_item(player_inventory, "Chess", 20, "A normal Chess", spr_chess, "");
scr_add_item(player_inventory, "Wood Shield", 1, "A normal Shield", spr_wood_shield, "");
scr_add_item(player_inventory, "Bow", 1, "A normal Bow", spr_bow, "");
scr_add_item(player_inventory, "Lance", 1, "A normal Lance", spr_lance, "");

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Stamina regen alarm
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Control the stats
if(hp &lt; 0){
    hp = 0;
}

// Stamina regen
if(stamina &lt; maxstamina &amp;&amp; alarm[0] == -1)
{
    stamina++;
}

// Pause the game
if (obj_input.pause_key) 
{
    if (room != rm_pause)
    {
        if (instance_exists(obj_player)){
            obj_player.persistent = false;
        }
        previous_room = room;
        room_persistent = true;
        room_goto(rm_pause);
    } else {
        room_goto(previous_room);
    }
    obj_input.pause_key = false;
}

if(keyboard_check_pressed(ord('P')))
{
    hp += 1;
}

if(keyboard_check_pressed(ord('O')))
{
    hp -= 1;
}

if(stamina &gt; maxstamina)
{
    stamina = maxstamina;
}

if(hp &gt; maxhp)
{
    hp = maxhp;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Remember the player's start position
if (room == rm_pause) exit;

switch (room_start_action) 
{
    case RETURN:
    
        break;
        
    case NEW_ROOM:
    default:
        if(instance_exists(obj_player)){
            player_xstart = obj_player.x;
            player_ystart = obj_player.y;
        }
        break; 
    case LOAD:
        scr_load_game();
        if(instance_exists(obj_player) and instance_exists(obj_view))
        {
            obj_view.x = obj_player.x;
            obj_view.y = obj_player.y;
        }
        break;
}
room_persistent = false;
room_start_action = NEW_ROOM;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Draw the stats
draw_set_colour(c_white);
if (instance_exists(obj_player))
{
    draw_sprite(spr_gui, 0, 0, 0);
    exprwidth = round((expr * 54)/maxexpr);
    draw_sprite_part(spr_bar, 0, 0, 0, exprwidth, 3, 22, 15);
    var i = 0;
    str_level = string(level);
    for(i = 0; i &lt; string_length(str_level); i++)
    {
        draw_sprite(spr_numbers, real(string_digits(string_char_at(str_level,i))), 4+(8*i), 8);
    }
    // Hearts
    
    var xx = 84;
    var yy = 0;
    
    var gui_width = display_get_gui_width();
    var gui_height = display_get_gui_height();
    
    var hearts = maxhp div 4
    var fullhearts = floor(hp div 4);
    var partialheart = hp mod 4;
    var emptyhearts = hearts - fullhearts;
    
    for(i = 0; i &lt; fullhearts; ++i)
    {
        draw_sprite(spr_heart, 4, xx, yy);
        xx += 16
        if ( xx &gt;= gui_width)
        {
            xx = gui_width - 16 * 10;
            yy += 16;
        }
    }
    if( partialheart != 0 ) 
    {
        emptyhearts--;
        draw_sprite(spr_heart, partialheart, xx, yy);
        xx += 16
        if ( xx &gt;= gui_width)
        {
            xx = gui_width - 16 * 10;
            yy += 16;
        }
    }
    for(i = 0; i &lt; emptyhearts; ++i)
    {
        draw_sprite(spr_heart, 0, xx, yy);
        xx += 16
        if ( xx &gt;= gui_width)
        {
            xx = gui_width - 16 * 10;
            yy += 16;
        }
    }
    
    //Stamina
    xx = 0;
    yy = 34;
    
    var empty_stamina = maxstamina - stamina;
    var full_stamina = maxstamina - empty_stamina;
    
    for(i = 0; i &lt; maxstamina; ++i)
    {
        if(full_stamina &gt; 0 )
        {
            draw_sprite(spr_stamina, 1, xx, yy);
            full_stamina--;
        }else{
            draw_sprite(spr_stamina, 0, xx, yy);
        }
        yy += 16;
        if ( yy &gt;= gui_height)
        {
            yy = 34;
            xx += 16;
        }
        
    }
    
    
    

}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
